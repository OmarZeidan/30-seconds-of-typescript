(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{172:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),o=(n(0),n(479)),i={title:"JSONtoCSV",tags:"array,string,object,advanced",author_title:"Deepak Vishwakarma",author_url:"https://github.com/deepakshrma",author_image_url:"https://avatars2.githubusercontent.com/u/7682731?s=400",description:'Implementation of "JSONtoCSV" in typescript, javascript and deno.',image:"https://www.positronx.io/wp-content/uploads/2018/11/positronx-banner-1152-1.jpg"},c={unversionedId:"JSONtoCSV",id:"JSONtoCSV",isDocsHomePage:!1,title:"JSONtoCSV",description:'Implementation of "JSONtoCSV" in typescript, javascript and deno.',source:"@site/docs/JSONtoCSV.md",slug:"/JSONtoCSV",permalink:"/30-seconds-of-typescript/docs/JSONtoCSV",editUrl:"https://github.com/deepakshrma/30-seconds-of-typescript/edit/master/docs/JSONtoCSV.md",version:"current",sidebar:"someSidebar",previous:{title:"JSONToFile",permalink:"/30-seconds-of-typescript/docs/JSONToFile"},next:{title:"last",permalink:"/30-seconds-of-typescript/docs/last"}},p=[],s={toc:p};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-typescript-blue.svg?style=flat-square",alt:"TS"}),"\n",Object(o.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-javascript-yellow.svg?style=flat-square",alt:"JS"}),"\n",Object(o.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-deno-green.svg?style=flat-square",alt:"Deno"})),Object(o.b)("p",null,"Converts an array of objects to a comma-separated values (CSV) string that contains only the ",Object(o.b)("inlineCode",{parentName:"p"},"columns")," specified."),Object(o.b)("p",null,"Use ",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype.join(delimiter)")," to combine all the names in ",Object(o.b)("inlineCode",{parentName:"p"},"columns")," to create the first row.\nUse ",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype.map()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype.reduce()")," to create a row for each object, substituting non-existent values with empty strings and only mapping values in ",Object(o.b)("inlineCode",{parentName:"p"},"columns"),".\nUse ",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype.join('\\n')")," to combine all rows into a string.\nOmit the third argument, ",Object(o.b)("inlineCode",{parentName:"p"},"delimiter"),", to use a default delimiter of ",Object(o.b)("inlineCode",{parentName:"p"},","),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},'const JSONtoCSV = (arr: any[], columns: string[], delimiter = ",") =>\n  [\n    columns.join(delimiter),\n    ...arr.map((obj) =>\n      columns.reduce(\n        (acc, key) =>\n          `${acc}${!acc.length ? "" : delimiter}"${!obj[key] ? "" : obj[key]}"`,\n        ""\n      )\n    ),\n  ].join("\\n");\n')),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},'JSONtoCSV(\n  [{ a: 1, b: 2 }, { a: 3, b: 4, c: 5 }, { a: 6 }, { b: 7 }],\n  ["a", "b"]\n); // \'a,b\\n"1","2"\\n"3","4"\\n"6",""\\n"","7"\'\nJSONtoCSV(\n  [{ a: 1, b: 2 }, { a: 3, b: 4, c: 5 }, { a: 6 }, { b: 7 }],\n  ["a", "b"],\n  ";"\n); // \'a;b\\n"1";"2"\\n"3";"4"\\n"6";""\\n"";"7"\'\n')))}l.isMDXComponent=!0},479:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,d=u["".concat(i,".").concat(m)]||u[m]||b[m]||o;return n?a.a.createElement(d,c(c({ref:t},s),{},{components:n})):a.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);
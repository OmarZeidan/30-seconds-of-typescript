(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{178:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),o=(n(0),n(503)),i={title:"createEventHub",tags:"browser,event,advanced"},c={id:"createEventHub",isDocsHomePage:!1,title:"createEventHub",description:"Creates a pub/sub (publish\u2013subscribe) event hub with emit, on, and off methods.",source:"@site/docs/createEventHub.md",permalink:"/30-seconds-of-typescript/docs/createEventHub",editUrl:"https://github.com/deepakshrma/30-seconds-of-typescript/edit/master/docs/createEventHub.md"},s=[],b={rightToc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Creates a pub/sub (",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern"}),"publish\u2013subscribe"),") event hub with ",Object(o.b)("inlineCode",{parentName:"p"},"emit"),", ",Object(o.b)("inlineCode",{parentName:"p"},"on"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"off")," methods."),Object(o.b)("p",null,"Use ",Object(o.b)("inlineCode",{parentName:"p"},"Object.create(null)")," to create an empty ",Object(o.b)("inlineCode",{parentName:"p"},"hub")," object that does not inherit properties from ",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype"),".\nFor ",Object(o.b)("inlineCode",{parentName:"p"},"emit"),", resolve the array of handlers based on the ",Object(o.b)("inlineCode",{parentName:"p"},"event")," argument and then run each one with ",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype.forEach()")," by passing in the data as an argument.\nFor ",Object(o.b)("inlineCode",{parentName:"p"},"on"),", create an array for the event if it does not yet exist, then use ",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype.push()")," to add the handler\nto the array.\nFor ",Object(o.b)("inlineCode",{parentName:"p"},"off"),", use ",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype.findIndex()")," to find the index of the handler in the event array and remove it using ",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype.splice()"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const createEventHub = () => ({\n  hub: Object.create(null),\n  emit(event, data) {\n    (this.hub[event] || []).forEach(handler => handler(data));\n  },\n  on(event, handler) {\n    if (!this.hub[event]) this.hub[event] = [];\n    this.hub[event].push(handler);\n  },\n  off(event, handler) {\n    const i = (this.hub[event] || []).findIndex(h => h === handler);\n    if (i > -1) this.hub[event].splice(i, 1);\n    if (this.hub[event].length === 0) delete this.hub[event];\n  }\n});\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const handler = data => console.log(data);\nconst hub = createEventHub();\nlet increment = 0;\n\n// Subscribe: listen for different types of events\nhub.on('message', handler);\nhub.on('message', () => console.log('Message event fired'));\nhub.on('increment', () => increment++);\n\n// Publish: emit events to invoke all handlers subscribed to them, passing the data to them as an argument\nhub.emit('message', 'hello world'); // logs 'hello world' and 'Message event fired'\nhub.emit('message', { hello: 'world' }); // logs the object and 'Message event fired'\nhub.emit('increment'); // `increment` variable is now 1\n\n// Unsubscribe: stop a specific handler from listening to the 'message' event\nhub.off('message', handler);\n")))}p.isMDXComponent=!0},503:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),p=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=p(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),l=p(n),d=r,h=l["".concat(i,".").concat(d)]||l[d]||u[d]||o;return n?a.a.createElement(h,c(c({ref:t},b),{},{components:n})):a.a.createElement(h,c({ref:t},b))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var b=2;b<o;b++)i[b]=n[b];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);
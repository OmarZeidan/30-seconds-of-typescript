(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{479:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=u(n),m=r,b=l["".concat(o,".").concat(m)]||l[m]||d[m]||i;return n?a.a.createElement(b,p(p({ref:t},s),{},{components:n})):a.a.createElement(b,p({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(479)),o={title:"unzipWith",tags:"array,function,advanced",author_title:"Deepak Vishwakarma",author_url:"https://github.com/deepakshrma",author_image_url:"https://avatars2.githubusercontent.com/u/7682731?s=400",description:'Implementation of "unzipWith" in typescript, javascript and deno.',image:"https://www.positronx.io/wp-content/uploads/2018/11/positronx-banner-1152-1.jpg"},p={unversionedId:"unzipWith",id:"unzipWith",isDocsHomePage:!1,title:"unzipWith",description:'Implementation of "unzipWith" in typescript, javascript and deno.',source:"@site/docs/unzipWith.md",slug:"/unzipWith",permalink:"/30-seconds-of-typescript/docs/unzipWith",editUrl:"https://github.com/deepakshrma/30-seconds-of-typescript/edit/master/docs/unzipWith.md",version:"current",sidebar:"someSidebar",previous:{title:"unzip",permalink:"/30-seconds-of-typescript/docs/unzip"},next:{title:"URLJoin",permalink:"/30-seconds-of-typescript/docs/URLJoin"}},c=[],s={toc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-typescript-blue.svg?style=flat-square",alt:"TS"}),"\n",Object(i.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-javascript-yellow.svg?style=flat-square",alt:"JS"}),"\n",Object(i.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-deno-green.svg?style=flat-square",alt:"Deno"})),Object(i.b)("p",null,"Creates an array of elements, ungrouping the elements in an array produced by ",Object(i.b)("a",{parentName:"p",href:"#zip"},"zip")," and applying the provided function."),Object(i.b)("p",null,"Note: Provide size to make calculation faster"),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"Math.max.apply()")," to get the longest subarray in the array, ",Object(i.b)("inlineCode",{parentName:"p"},"Array.prototype.map()")," to make each element an array.\nUse ",Object(i.b)("inlineCode",{parentName:"p"},"Array.prototype.reduce()")," and ",Object(i.b)("inlineCode",{parentName:"p"},"Array.prototype.forEach()")," to map grouped values to individual arrays.\nUse ",Object(i.b)("inlineCode",{parentName:"p"},"Array.prototype.map()")," and the spread operator (",Object(i.b)("inlineCode",{parentName:"p"},"..."),") to apply ",Object(i.b)("inlineCode",{parentName:"p"},"fn")," to each individual group of elements."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"const unzipWith = (arr: any[], fn: Function, size = 0) =>\n  arr\n    .reduce(\n      (acc, val) => (val.forEach((v: any, i: number) => acc[i].push(v)), acc),\n      Array.from({\n        length: size || Math.max(...arr.map((x) => x.length)),\n      }).map((x) => [])\n    )\n    .map((val: any) => fn(...val));\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},"unzipWith(\n  [\n    [1, 10, 100],\n    [2, 20, 200],\n  ],\n  (...args) => args.reduce((acc, v) => acc + v, 0)\n); // [3, 30, 300]\nunzipWith(\n  [\n    [1, 10, 100],\n    [2, 20, 200],\n  ],\n  (...args) => args.reduce((acc, v) => acc + v, 0),\n  3\n); // [3, 30, 300]\n")))}u.isMDXComponent=!0}}]);
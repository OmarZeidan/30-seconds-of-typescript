(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{466:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),u=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(n),b=r,f=l["".concat(c,".").concat(b)]||l[b]||m[b]||i;return n?o.a.createElement(f,a(a({ref:t},p),{},{components:n})):o.a.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=b;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var p=2;p<i;p++)c[p]=n[p];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),i=(n(0),n(466)),c={title:"pipeAsyncFunctions",tags:"function,promise,intermediate"},a={unversionedId:"pipeAsyncFunctions",id:"pipeAsyncFunctions",isDocsHomePage:!1,title:"pipeAsyncFunctions",description:"TS",source:"@site/docs/pipeAsyncFunctions.md",permalink:"/30-seconds-of-typescript/docs/pipeAsyncFunctions",editUrl:"https://github.com/deepakshrma/30-seconds-of-typescript/edit/master/docs/pipeAsyncFunctions.md",sidebar:"someSidebar",previous:{title:"pickBy",permalink:"/30-seconds-of-typescript/docs/pickBy"},next:{title:"pipeFunctions",permalink:"/30-seconds-of-typescript/docs/pipeFunctions"}},s=[],p={rightToc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"https://img.shields.io/badge/supports-typescript-blue.svg?style=flat-square",alt:"TS"})),"\n",Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"https://img.shields.io/badge/supports-javascript-yellow.svg?style=flat-square",alt:"JS"})),"\n",Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"https://img.shields.io/badge/supports-deno-green.svg?style=flat-square",alt:"Deno"}))),Object(i.b)("p",null,"Performs left-to-right function composition for asynchronous functions."),Object(i.b)("p",null,"Use ",Object(i.b)("inlineCode",{parentName:"p"},"Array.prototype.reduce()")," and the spread operator (",Object(i.b)("inlineCode",{parentName:"p"},"..."),") to perform function composition using ",Object(i.b)("inlineCode",{parentName:"p"},"Promise.then()"),".\nThe functions can return a combination of normal values, ",Object(i.b)("inlineCode",{parentName:"p"},"Promise"),"s or be ",Object(i.b)("inlineCode",{parentName:"p"},"async"),", returning through ",Object(i.b)("inlineCode",{parentName:"p"},"await"),".\nAll functions must accept a single argument."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="typescript"',title:'"typescript"'}),"type PromiseReturn = (v: any) => Promise<any>;\nconst pipeAsyncFunctions = (...fns: PromiseReturn[]) => (arg: any) =>\n  fns.reduce((p, f) => p.then(f), Promise.resolve(arg) as PromiseLike<any>);\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts",metastring:'title="typescript"',title:'"typescript"'}),"const sum = pipeAsyncFunctions(\n  (x) => x + 1,\n  (x) => new Promise((resolve) => setTimeout(() => resolve(x + 2), 1000)),\n  (x) => x + 3,\n  async (x) => (await x) + 4\n);\n(async () => {\n  console.log(await sum(5)); // 15 (after one second)\n})();\n")))}u.isMDXComponent=!0}}]);
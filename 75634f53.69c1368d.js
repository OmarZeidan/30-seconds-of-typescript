(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{256:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return c})),o.d(t,"metadata",(function(){return l})),o.d(t,"toc",(function(){return a})),o.d(t,"default",(function(){return p}));var r=o(3),n=o(7),i=(o(0),o(479)),c={title:"colorize",tags:"node,string,intermediate",author_title:"Deepak Vishwakarma",author_url:"https://github.com/deepakshrma",author_image_url:"https://avatars2.githubusercontent.com/u/7682731?s=400",description:'Implementation of "colorize" in typescript, javascript and deno.',image:"https://www.positronx.io/wp-content/uploads/2018/11/positronx-banner-1152-1.jpg"},l={unversionedId:"colorize",id:"colorize",isDocsHomePage:!1,title:"colorize",description:'Implementation of "colorize" in typescript, javascript and deno.',source:"@site/docs/colorize.md",slug:"/colorize",permalink:"/30-seconds-of-typescript/docs/colorize",editUrl:"https://github.com/deepakshrma/30-seconds-of-typescript/edit/master/docs/colorize.md",version:"current",sidebar:"someSidebar",previous:{title:"collectInto",permalink:"/30-seconds-of-typescript/docs/collectInto"},next:{title:"compact",permalink:"/30-seconds-of-typescript/docs/compact"}},a=[],s={toc:a};function p(e){var t=e.components,o=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-typescript-blue.svg?style=flat-square",alt:"TS"}),"\n",Object(i.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-nodejs-yellow.svg?style=flat-square",alt:"JS"}),"\n",Object(i.b)("img",{parentName:"p",src:"https://img.shields.io/badge/supports-deno-green.svg?style=flat-square",alt:"Deno"})),Object(i.b)("p",null,"Add special characters to text to print in color in the console (combined with ",Object(i.b)("inlineCode",{parentName:"p"},"console.log()"),")."),Object(i.b)("p",null,"Use template literals and special characters to add the appropriate color code to the string output.\nFor background colors, add a special character that resets the background color at the end of the string."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},'export const colorize = new (class {\n  color = (code: number, ended = false, ...messages: any[]) =>\n    `\\x1b[${code}m${messages.join(" ")}${ended ? "\\x1b[0m" : ""}`;\n  black = this.color.bind(null, 30, false);\n  red = this.color.bind(null, 31, false);\n  green = this.color.bind(null, 32, false);\n  yellow = this.color.bind(this, 33, false);\n  blue = this.color.bind(this, 34, false);\n  magenta = this.color.bind(this, 35, false);\n  cyan = this.color.bind(this, 36, false);\n  white = this.color.bind(this, 37, false);\n  bgBlack = this.color.bind(this, 40, true);\n  bgRed = this.color.bind(this, 41, true);\n  bgGreen = this.color.bind(this, 42, true);\n  bgYellow = this.color.bind(this, 43, true);\n  bgBlue = this.color.bind(this, 44, true);\n  bgMagenta = this.color.bind(this, 45, true);\n  bgCyan = this.color.bind(this, 46, true);\n  bgWhite = this.color.bind(this, 47, true);\n})();\n\nconst color = colorize;\n')),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="typescript"',title:'"typescript"'},'console.log(color.red("foo")); // \'foo\' (red letters)\nconsole.log(color.bgBlue("foo", "bar")); // \'foo bar\' (blue background)\nconsole.log(color.bgWhite(color.yellow("foo"), color.green("foo"))); // \'foo bar\' (first\n//word in yellow letters, second word in green letters, white background for both)\n\nconsole.log(colorize.red("foo")); // \'foo\' (red letters)\nconsole.log(colorize.bgBlue("foo", "bar")); // \'foo bar\' (blue background)\nconsole.log(colorize.bgWhite(colorize.yellow("foo"), colorize.green("foo"))); // \'foo bar\' (first\n//word in yellow letters, second word in green letters, white background for both)\n')))}p.isMDXComponent=!0},479:function(e,t,o){"use strict";o.d(t,"a",(function(){return u})),o.d(t,"b",(function(){return f}));var r=o(0),n=o.n(r);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function c(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?c(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=n.a.createContext({}),p=function(e){var t=n.a.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},u=function(e){var t=p(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=n.a.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=p(o),b=r,f=u["".concat(c,".").concat(b)]||u[b]||d[b]||i;return o?n.a.createElement(f,l(l({ref:t},s),{},{components:o})):n.a.createElement(f,l({ref:t},s))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,c=new Array(i);c[0]=b;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<i;s++)c[s]=o[s];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,o)}b.displayName="MDXCreateElement"}}]);